package com.xiezhiai.wechatplugin.hooker;


import android.content.Context;

import com.xiezhiai.wechatplugin.core.Config;
import com.xiezhiai.wechatplugin.utils.LogUtil;
import com.yanzhenjie.nohttp.InitializationConfig;
import com.yanzhenjie.nohttp.Logger;
import com.yanzhenjie.nohttp.NoHttp;
import com.yanzhenjie.nohttp.cache.DBCacheStore;
import com.yanzhenjie.nohttp.cache.DiskCacheStore;
import com.yanzhenjie.nohttp.cookie.DBCookieStore;

import de.robv.android.xposed.IXposedHookLoadPackage;
import de.robv.android.xposed.callbacks.XC_LoadPackage;

/**
 * Created by shijiwei on 2018/10/12.
 *
 * @Desc:
 */
public class WechatHooker implements IXposedHookLoadPackage {

    public static XC_LoadPackage.LoadPackageParam wxllparam;

    @Override
    public void handleLoadPackage(XC_LoadPackage.LoadPackageParam lpparam) throws Throwable {

        //Only hook wechat process
        if (lpparam.packageName.equals(Config.xWechat.PACKAGE_NAME)) {
            try {
                wxllparam = lpparam;
                if (lpparam.processName.equals(Config.xWechat.PACKAGE_NAME)) {
                    /* 初始化配置 */
                    if (Config.init(lpparam)) {
                        /* 启动插件 */
                        startup(
                                lpparam,
                                new IHooker[]{
                                        new WechatSQLiteDatabaseHooker(),
                                        new WechatActivityHooker(),
                                        new AutoReplyHooker(),
                                        new LuckMoneyHooker(),
                                        new SnsHooker(),
                                        new ContactsHooker()
                                });
                    }
                }

            } catch (Exception e) {
                LogUtil.log(e.getMessage());
            }
        }
    }


    /**
     * 启动自定义的hooker
     *
     * @param lpparam
     * @param hookers
     */
    private void startup(XC_LoadPackage.LoadPackageParam lpparam, IHooker[] hookers) {
        if (hookers != null && hookers.length != 0) {
            for (IHooker hooker : hookers) {
                hooker.hook(lpparam);
            }
        }
    }


    /**
     * Initialize nohttp
     */
    public static void initialNoHttp(Context context) {

        NoHttp.initialize(
                InitializationConfig.newBuilder(context)
                        // 设置全局连接超时时间，单位毫秒
                        .connectionTimeout(10 * 1000)
                        // 设置全局服务器响应超时时间，单位毫秒
                        .readTimeout(10 * 1000)
                        // 保存到数据库,如果不使用缓存，设置false禁用
                        .cacheStore(new DBCacheStore(context).setEnable(true))
                        // 或者保存到SD卡
                        .cacheStore(new DiskCacheStore(context))
                        // 默认保存数据库DBCookieStore，开发者可以自己实现; 如果不维护cookie，设置false禁用。)
                        .cookieStore(new DBCookieStore(context).setEnable(false))
                        // 使用HttpURLConnection
//                        .networkExecutor(new URLConnectionNetworkExecutor())
                        // 使用OkHttp
//                        .networkExecutor(new OkHttpNetworkExecutor())
                        .build()
        );

        // 开启NoHttp的调试模式, 配置后可看到请求过程、日志和错误信息。
        Logger.setDebug(true);
        // 设置NoHttp打印Log的tag
        Logger.setTag("XizZhiAI_NoHttp");

    }

}
