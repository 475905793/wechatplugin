package com.xiezhiai.wechatplugin.utils;

import android.util.Log;

import de.robv.android.xposed.XposedBridge;

/**
 * Created by shijiwei on 2018/10/12.
 *
 * @Desc:
 */
public class LogUtil {

    /* Debug状态输出log日志 */
    public static boolean isDebug = true;

    public static String TAG = "邂智科技";

    public static void log(String content) {
        log(TAG, content);
    }

    public static void log(String tag, String content) {
        log(tag, content, false);
    }

    public static void log(String tag, String content, boolean logXP) {
        if (isDebug) {
            Log.e(tag, content);
            if (logXP) XposedBridge.log(tag + " : " + content);
        }
    }

    // 下面四个是默认tag的函数
    public static void i(String msg) {
        if (isDebug)
            Log.i(TAG, msg);
    }

    public static void d(String msg) {
        if (isDebug)
            Log.d(TAG, msg);
    }

    public static void e(String msg) {
        if (isDebug)
            Log.e(TAG, msg);
    }

    public static void v(String msg) {
        if (isDebug)
            Log.v(TAG, msg);
    }

    public static void w(String msg) {
        if (isDebug)
            Log.w(TAG, msg);
    }

    // 下面是传入自定义tag的函数
    public static void i(String tag, String msg) {
        if (isDebug)
            Log.i(tag, msg);
    }

    public static void d(String tag, String msg) {
        if (isDebug)
            Log.d(tag, msg);
    }

    public static void e(String tag, String msg) {
        if (isDebug)
            Log.e(tag, msg);
    }

    public static void v(String tag, String msg) {
        if (isDebug)
            Log.v(tag, msg);
    }

    /**
     * 字符数组拼接成字符串
     *
     * @param args
     * @return
     */
    public static String splitJoint(String[] args) {
        String result = "";
        if (args != null && args.length != 0) {
            for (String arg : args) {
                result += "，" + arg;
            }
            result = result.substring(1, result.length());
        }
        return result;
    }


    /**
     * @param keys
     * @param values
     * @return
     */
    public static String splitJointKeyValue(String[] keys, String[] values) {
        String result = "";
        if (keys == null || keys.length == 0 || values == null || values.length == 0) {
            result = "keys or values is null";
        } else {
            for (int i = 0; i < keys.length; i++) {
                result += keys[i] + " = " + values[i] + "，";
            }
        }
        return result;
    }
}
